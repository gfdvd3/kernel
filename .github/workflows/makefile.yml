name: 编译内核

on: [ push, workflow_dispatch ]
    
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with: { path: kernel }

    - name: 初始化子模块
      working-directory: kernel
      run: git submodule update --init --remote --recursive

    - name: 获取版本信息
      id: versions
      working-directory: kernel
      run: |
        echo KERNELSU=$(cd KernelSU && expr 10606 + $(git rev-list --count main)) >> $GITHUB_OUTPUT

    - name: 构建编译内核环境
      run: |
        sudo apt-get update
        sudo -E apt-get -y -qq install python3 python2 git make bc bison ccache openssl dos2unix zip kmod cpio flex libelf-dev curl libssl-dev libtfm-dev wget device-tree-compiler ca-certificates binutils binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi

    - name: 下载 Gcc编译器
      run: |
        mkdir gcc64
        wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc64/ -zxvf gcc-aarch64.tar.gz

        mkdir gcc32
        wget -O gcc-arm.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
        tar -C gcc32/ -zxvf gcc-arm.tar.gz

        mkdir clang-aosp
        git clone -q --depth=1 https://github.com/crdroidandroid/android_prebuilts_clang_host_linux-x86_clang-6443078 -b 10.0 clang-aosp

    - name: 设置ccache缓存
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build-kernel-mido-kernel
        max-size: 2G

    - name: 编译内核
      working-directory: kernel
      run: |
        export PATH=$GITHUB_WORKSPACE/clang-aosp/bin:$GITHUB_WORKSPACE/gcc64/bin:$GITHUB_WORKSPACE/gcc32/bin:$PATH
        make -s -j$(nproc --all) O=${{ runner.temp }}/make ARCH=arm64 mt6853-ss_defconfig
        make -s -j$(nproc --all) CC="ccache clang" O=${{ runner.temp }}/make ARCH=arm64 CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android- CROSS_COMPILE_ARM32=arm-linux-androideabi- LD=ld.lld

    - name: 打包AnyKernel3
      run: |
       git clone https://github.com/osm0sis/AnyKernel3 --depth=1 ak3
       cd ak3
       rm -rf .git .github LICENSE README.md
       cat >anykernel.sh <<EOF
       properties() { '
       kernel.string=Kernel for mt6853 with KernelSU@${{ steps.versions.outputs.KERNELSU }}
       do.devicecheck=0
       '; }
       block=auto
       is_slot_device=auto
       ramdisk_compression=auto
       patch_vbmeta_flag=auto
       . tools/ak3-core.sh
       split_boot
       flash_boot
       EOF
       cp ${{ runner.temp }}/make/arch/arm64/boot/Image.gz-dtb .
       zip -q -r AnyKernel3.zip *

    - name: 发布
      uses: softprops/action-gh-release@v2
      with:
        tag_name: awkoo
        name: Kernel build awkoo
        files: |
            ak3/AnyKernel3.zip
            ak3/Image.gz-dtb

